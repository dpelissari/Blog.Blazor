@page "/";
@using Blog.Blazor.Interfaces
@using Blog.Blazor.Models
@using Microsoft.AspNetCore.Authorization

@rendermode InteractiveServer
@inject IPostService PostService;
@inject IAutorService AutorService;
@inject ICategoriaService CategoriaService;
 
        <div class="container p-4">
            <PlaceHolder Visible="posts != null && posts.Any()">
                <div class="fixed-grid has-4-cols-desktop has-3-cols-tablet has-1-cols-mobile">
                    <div class="grid">
                        <Repeater DataSource="posts.OrderByDescending(x => x.Cadastro).Where(x => x.Ativo == true)" Context="item">
                            <ItemTemplate>
                                <CardPost Post="item"></CardPost>
                            </ItemTemplate>
                        </Repeater>
                    </div>
                </div>
            </PlaceHolder>
            <PlaceHolder Visible="!posts.Any()">
                <article class="message is-warning">
                    <div class="message-body">
                        No momento, não há publicações disponíveis para exibição.
                    </div>
                </article>
            </PlaceHolder>
        </div>


@code {

    private IQueryable<Post> posts;

    protected override async Task OnInitializedAsync()
    {
        posts = await PostService.BuscarTodos();

        // alimenta autores e categoria
        foreach (var post in posts)
        {
            post.Autor = await AutorService.BuscarPor(post.IdAutor);
            post.Categoria = await CategoriaService.BuscarPor(post.IdCategoria);
        }
    }
}
