@page "/post/{Id}"
@using Blog.Blazor.Interfaces
@using Blog.Blazor.Models

@inject NavigationManager NavigationManager
@inject IPostService PostService;
@inject ICategoriaService CategoriaService;
@inject IAutorService AutorService;

<PageTitle>@post.Titulo</PageTitle>
<HeadContent><meta name="description" content="@post.DescricaoSEO" /></HeadContent>

<div class="container p-4">
    <div class="content box">
        <div class="imagem" style="background: url(@post.CaminhoImagem) center no-repeat; background-size:cover; height:260px; border-radius:8px; filter:brightness(0.8); ">
        </div>
        <span class="categoria mt-4">@post.Categoria.Nome</span>
        <h1 class="title">@post.Titulo</h1>
        <p>
            Publicado @(post.Cadastro.Date == DateTime.Now.Date ? "Hoje às " + post.Cadastro.ToString("HH:mm") :
            post.Cadastro.Date == DateTime.Now.Date.AddDays(-1) ? "Ontem às " + post.Cadastro.ToString("HH:mm") :
            "em " + post.Cadastro.ToShortDateString() + " às " + post.Cadastro.ToString("HH:mm")) por @post.Autor.Nome
        </p>
        <p>@((MarkupString)post.Conteudo)</p>
    </div>
    <NavLink class="button is-black is-medium" href="@(returnUrl ?? "/")">
        <FeatherArrowLeft Size="25" Color="#FFF" StrokeWidth="1.8f" />
    </NavLink>
</div>

@code {

    [Parameter] public string? Id { get; set; }
    private Post post = new();
    private string? returnUrl;

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(Id))
        {
            if (Guid.TryParse(Id, out Guid idPost))
            {
                // busca post e alimenta autor e categoria
                post = await PostService.BuscarPorIdPost(idPost);
                post.Categoria = await CategoriaService.BuscarPorId(post.IdCategoria);
                post.Autor = await AutorService.BuscarPorId(post.IdAutor);
            }
            else
            {
                // ID inválido, redireciona para listagem de autores
                NavigationManager.NavigateTo("/");
            }
        }

        // recupera o target parametro da url
        var uri = new Uri(NavigationManager.Uri);
        var queryParams = Microsoft.AspNetCore.WebUtilities.QueryHelpers.ParseQuery(uri.Query);
        if (queryParams.TryGetValue("tg", out var url))
        {
            returnUrl = url.ToString();
        }
    }
}
