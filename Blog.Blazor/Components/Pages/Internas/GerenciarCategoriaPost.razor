@page "/int/categoria/editar/{id?}"
@page "/int/categoria/nova/"

﻿@using Blog.Blazor.Interfaces
@using Blog.Blazor.Models

@inject NavigationManager NavigationManager
@inject ICategoriaService CategoriaService

<div class="container p-3">

    <h1 class="title">@(modoEdicao ? "Editar" : "Incluir") categoria</h1>

    <EditForm Model="@categoria" OnValidSubmit="modoEdicao ? AtualizarCategoria : CriarCategoria" FormName="categoria" Enhance>
        <DataAnnotationsValidator />

        <div class="field">
            <label class="label">Nome</label>
            <InputText @bind-Value="categoria.Nome" class="input"></InputText>
            <ValidationMessage For="@(() => categoria.Nome)" />
        </div>
        <div class="field">
            <label class="label">Descrição</label>
            <InputTextArea @bind-Value="categoria.Descricao" rows="5" class="textarea"></InputTextArea>
            <ValidationMessage For="@(() => categoria.Descricao)" />
        </div>
        <div class="field">
            <label class="label">Descrição SEO</label>
            <InputTextArea @bind-Value="categoria.DescricaoSEO" rows="5" class="textarea"></InputTextArea>
            <ValidationMessage For="@(() => categoria.DescricaoSEO)" />
        </div>
        <div class="field">
            <label class="label">Tittle SEO</label>
            <InputTextArea @bind-Value="categoria.TituloPaginaSEO" rows="5" class="textarea"></InputTextArea>
            <ValidationMessage For="@(() => categoria.TituloPaginaSEO)" />
        </div>
        <div class="field">
            <label class="label">Exibir no menu?</label>
            <div class="select">
                <InputSelect @bind-Value="categoria.ExibirItemMenu">
                    <option value="true">Sim</option>
                    <option value="false">Não</option>
                </InputSelect>
            </div>
        </div>
        <div class="field">
            <label class="label">Categoria ativa?</label>
            <div class="select">
                <InputSelect @bind-Value="categoria.Ativo">
                    <option value="true">Sim</option>
                    <option value="false">Não</option>
                </InputSelect>
            </div>
        </div>

        <NavLink href="/" class="button is-danger">CANCELAR</NavLink>
        <button class="button is-success" type="submit">SALVAR</button>

    </EditForm>
</div>

@code {

    [SupplyParameterFromForm]
    private Categoria? categoria { get; set; } = new();

    bool modoEdicao = false;

    [Parameter]
    public string? id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(id))
        {

            if (Guid.TryParse(id, out Guid idCategoria))
            {
                categoria = await CategoriaService.BuscarPor(idCategoria);
                modoEdicao = true;
            }
            else
            {
                // id inválido, redireciona para listagem de autores
                NavigationManager.NavigateTo("/categorias");
            }
        }
    }

    async Task CriarCategoria()
    {
        await CategoriaService.Adicionar(categoria);
        NavigationManager.NavigateTo("/categorias");
    }

    async Task AtualizarCategoria()
    {
        await CategoriaService.Atualizar(categoria);
        NavigationManager.NavigateTo("/categorias");
    }
}
